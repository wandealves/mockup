{"remainingRequest":"/home/wanderson/dev/_Repositorios/mockup/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/wanderson/dev/_Repositorios/mockup/node_modules/core-js/modules/es7.reflect.delete-metadata.js","dependencies":[{"path":"/home/wanderson/dev/_Repositorios/mockup/node_modules/core-js/modules/es7.reflect.delete-metadata.js","mtime":1468790626000},{"path":"/home/wanderson/dev/_Repositorios/mockup/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/wanderson/dev/_Repositorios/mockup/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var metadata               = require('./_metadata')\n  , anObject               = require('./_an-object')\n  , toMetaKey              = metadata.key\n  , getOrCreateMetadataMap = metadata.map\n  , store                  = metadata.store;\n\nmetadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){\n  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])\n    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;\n  if(metadataMap.size)return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n}});",null]}